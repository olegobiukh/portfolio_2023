{"version":3,"sources":["api/index.jsx","components/Slider/Slider.tsx","App.jsx","index.jsx"],"names":["getBreeds","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","count","response","data","_iterator","_step","breed","referenceImageId","_imageData$","_response","imageData","imageUrl","wrap","_context","prev","next","fetch","sent","ok","Error","json","_createForOfIteratorHelper","s","n","done","value","reference_image_id","concat","name","url","image","t0","console","error","t1","e","f","finish","log","JSON","stringify","forEach","element","ind","abrupt","t2","stop","_x","apply","arguments","CustomSlider","_useState","useState","_useState2","_slicedToArray","setValue","_useState3","_useState4","images","setImages","useEffect","fetchData","catImageUrls","length","vwToPx","window","innerWidth","gsap","to","x","duration","_jsxs","className","children","_jsx","Skeleton","active","id","map","item","description","src","onClick","App","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc5046e3.chunk.js","sourcesContent":["const apiUrl = \"https://api.thecatapi.com/v1/breeds\";\n\nexport const getBreeds = async (count) => {\n  try {\n    const response = await fetch(\n      // `https://api.thecatapi.com/v1/images/search?limit=${count}`\n      apiUrl\n    );\n\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n\n    const data = await response.json();\n    \n    for (let breed of data) {\n      const referenceImageId = breed.reference_image_id;\n  \n      try {\n        const response = await fetch(\n          `https://api.thecatapi.com/v1/images/search?reference_image_id=${referenceImageId}`\n        );\n  \n        if (!response.ok) {\n          throw new Error(`Error fetching image for breed: ${breed.name}`);\n        }\n  \n        const imageData = await response.json();\n        const imageUrl = imageData[0]?.url;\n  \n        breed.image = imageUrl;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  \n    console.log(\"data\", JSON.stringify(data));\n\n    \n    data.forEach((element, ind) => {\n      element.ind = ind;\n    });\n    console.log(\"data\", JSON.stringify(data));\n\n    return data;\n  } catch (error) {\n    console.error(\"Error:\", error);\n    throw error;\n  }\n};\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport \"./index.scss\";\n\nimport { gsap } from \"gsap\";\nimport { Skeleton } from \"antd\";\n\nimport { getBreeds } from \"../../api\";\n\ninterface ImageItem {\n  image: string;\n  id: number;\n  ind: number;\n  name: string;\n  description: string;\n}\n\nconst CustomSlider: React.FC = () => {\n  const [value, setValue] = useState<number>(0);\n  const [images, setImages] = useState<ImageItem[]>([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const catImageUrls = await getBreeds(10);\n        console.log(catImageUrls);\n\n        setImages(catImageUrls);\n      } catch (error) {\n        console.error(\"Error in useEffect:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (value < 0) {\n      setValue(images[images.length - 1].ind);\n    }\n\n    if (value > images.length - 1) {\n      setValue(0);\n    }\n\n    const vw: number = window.innerWidth;\n\n    const vwToPx: number = (100 / 100) * vw;\n\n    gsap.to(\".slider__images\", { x: -(value * vwToPx), duration: 0.3 });\n  }, [value]);\n\n  return (\n    <div className=\"slider\">\n      {!images.length && (\n        <div className=\"slider__loader\">\n          <Skeleton active />\n        </div>\n      )}\n      {images.length ? (\n        <div className=\"slider__container\">\n          <div className=\"slider__images\" id=\"images\">\n            {images.map((item: ImageItem) => (\n              <div className=\"item\" key={item.id}>\n                <div className=\"item__content\">\n                  <p className=\"item__description\">{item.description}</p>\n                  <p className=\"item__name\">{item.name}</p>\n                </div>\n                <img src={item.image} className=\"item__image\" />\n              </div>\n            ))}\n          </div>\n          <div\n            className=\"button button-prev\"\n            onClick={() => setValue(value - 1)}\n          >\n            <i className=\"material-icons button__icon\">keyboard_arrow_left</i>\n          </div>\n          <div\n            className=\"button button-next\"\n            onClick={() => setValue(value + 1)}\n          >\n            <i className=\"material-icons button__icon\">keyboard_arrow_right</i>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default CustomSlider;\n","import \"./App.css\";\nimport CustomSlider from \"./components/Slider/Slider\";\n\nexport const App: React.FC = () => (\n  <div className=\"App\">\n    <CustomSlider />\n  </div>\n);\n","import ReactDom from 'react-dom';\nimport { App } from './App';\n\nReactDom.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}